* To install
make clean  // TODO possibly not necessary
make
make install-all 

Then make a symbolic link from file in directory plugin to the plugin directory of your gps install. (directory link do not seem to work; use absolute path)
ln -s $SPARK_INSTALL/plugin/itp2017.py $HOME/.gps/plug-ins/itp2017.py
ln -s $SPARK_INSTALL/plugin/itp_menu.xml $HOME/.gps/plug-ins/itp_menu.xml

* What has been done
  - adapt gnatwhy3 to the new Why3 ITP / Session etc
  - write a small minimal server gnat_server.ml for interaction with Why3 ITP
  - write a small plugin in GPS that interactively launch and communicate with gnat_server thanks to request/notification written in JSON


** Adapting gnatwhy3
  TODO

** Minimal server
  We have a minimal server which communicate to a gps plugin through its input/output in a JSON format. The server produce notification at random type and has to be able to handle request.   

  TODO


* TODO list:
  - Add detection of the correct command line instead of a hard path to a file
  - Possibility to have directly the focus from the source code/integration with SPARK (put everything in the same plugin)
  - Rebranch manual proof (coq/Isabelle) in gnatwhy3
  - Rebranch replay in gnatwhy3
  - Complete small descriptions
  - Make it work when there are several .mlw in the gnatprove folder (current behaviour is to find the first one )


feature requests:
- Produce tasks which use names coming from the source. Those name can be used on the commandline,
- Focus on a specific goal with right click from Ada source code,
- Find a way to squash long sequences of tactics,
- Select a tactic directly with a right click on the source,
- Syntax highlighting for the task,
- proof task on top right; command prompt should not be that big, completion etc..
- hyperlink text to the code/their definitions in the task,
- test a real example (with array for example); look at example that comes from users ie ticket list for this,
- use spark name when possible. Proposition of syntax X@line54@If or something like this ?
- command prompt for the commandline 
- put a toolbar with some tactics
- in the proof tree, add some nice image for "proved" "obsolete" etc... The same as why3ide ?
- get ideas from other proof assistant,
- look at other provers, for example Atelier B.
