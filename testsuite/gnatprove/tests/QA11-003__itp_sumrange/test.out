sum.adb:16:33: info: loop invariant initialization proved (CVC4: 1 VC)
sum.adb:16:33: medium: loop invariant might fail after first iteration, cannot prove abs (S) <= K * 2000
sum.adb:16:33: medium: overflow check might fail
sum.adb:16:38: info: initialization of "S" proved
sum.adb:16:46: medium: overflow check might fail
sum.adb:17:33: info: initialization of "S" proved
sum.adb:17:33: medium: loop invariant might fail after first iteration, cannot prove S = Sum (A, I, K)
sum.adb:17:33: medium: loop invariant might fail in first iteration, cannot prove S = Sum (A, I, K)
sum.adb:17:37: info: function contract not available for proof ("Sum" is recursive)
sum.adb:17:37: medium: precondition might fail [possible explanation: precondition of subprogram at line 12 should mention A]
sum.adb:17:48: medium: range check might fail
sum.adb:18:15: info: initialization of "S" proved
sum.adb:18:17: medium: overflow check might fail
sum.adb:20:14: info: initialization of "S" proved
sum.ads:11:13: medium: subprogram "Sum" might not terminate, terminating annotation could be incorrect
sum.ads:15:17: medium: overflow check might fail [possible explanation: precondition of subprogram at line 11 should mention A]
sum.ads:15:19: info: function contract not available for proof ("Sum" is recursive)
sum.ads:15:19: info: precondition proved (CVC4: 1 VC)
sum.ads:15:29: medium: range check might fail
sum.ads:18:12: medium: overflow check might fail
sum.ads:18:12: medium: postcondition might fail, cannot prove abs (Sum'Result) <= (J - I) * 3000
sum.ads:18:40: info: overflow check proved (CVC4: 1 VC)
sum.ads:36:14: medium: postcondition might fail, cannot prove Simple_Sum'Result = Sum (A, I, J)
sum.ads:36:34: info: function contract not available for proof ("Sum" is recursive)
sum.ads:36:34: medium: precondition might fail
